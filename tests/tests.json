[
	{
		"name":"int",
		"parser":"IntParser",
		"input":"45",
		"tests":[
			{
				"check":"base->end",
				"value":2
			},
			{
				"check":"base->value",
				"value":45
			}
		]
	},
	{
		"name":"intspace",
		"parser":"IntParser",
		"input":" 45",
		"tests":[
			{
				"check":"base->end",
				"value":3
			},
			{
				"check":"base->value",
				"value":45
			}
		]
	},
	{
		"name":"inthex",
		"parser":"IntParser",
		"input":"0x45",
		"tests":[
			{
				"check":"base->end",
				"value":4
			},
			{
				"check":"base->value",
				"value":69
			}
		]
	},
	{
		"name":"expr",
		"parser":"ExprParser",
		"input":"3+4",
		"tests":[
			{
				"check":"base->end",
				"value":3
			},
			{
				"check":"base->e",
				"value":"(void*)NULL",
				"equal":false,
				"tests":[
					{
						"check":"base->e->children",
						"value":"(void*)NULL",
						"equal":false,
						"tests":[
							{
								"check":"(*base->e->children)[0]",
								"value":"(void*)NULL",
								"equal":false,
								"tests":[
									{
										"check":"(*base->e->children)[0]->type",
										"value":"ExprType::VALUE",
										"tests":[
											{
												"check":"(*base->e->children)[0]->value",
												"value":"(void*)NULL",
												"equal":false,
												"tests":[
													{
														"check":"(*base->e->children)[0]->value->i",
														"value":3
													}
												]
											}
										]
									}
								]
							}
						]
					}
				]
			}
		]
	},
	{
		"name":"expr2",
		"parser":"ExprParser",
		"input":"3+ 4",
		"tests":[
			{
				"check":"base->end",
				"value":4
			}
		]
	}
]
